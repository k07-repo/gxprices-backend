{"version":3,"sources":["services/priceService.js","services/groupService.js","services/listService.js","services/metaService.js","utils/date.js","components/ProductModal.js","utils/table.js","utils/constants.js","components/Prices.js","components/FAQ.js","services/userService.js","components/RegisterForm.js","components/Watchlist.js","components/Collection.js","utils/auth.js","services/loginService.js","components/GXNavbar.js","components/LegalNavbar.js","components/UserPage.js","components/Privacy.js","App.js","index.js"],"names":["axios","get","setId","baseUrl","token","setToken","newToken","pushToWatchlist","userId","productId","a","config","headers","Authorization","put","response","data","pushToCollection","deleteFromWatchlist","deleteFromCollection","increment","decrement","formatDate","date","toLocaleDateString","undefined","year","month","day","ProductModal","show","product","handleClose","Modal","onHide","Header","closeButton","Title","Body","rowSpan","className","src","imageUrl","alt","name","group","groupName","cardNumber","cardRarity","currentMarketPrice","currentDate","DateUtils","Date","href","storeUrl","Footer","Button","variant","onClick","differenceSort","b","order","dataField","rowA","rowB","differenceA","previousMarketPrice","differenceB","differenceFormatter","cell","row","difference","toFixed","color","percentDifferenceSort","percentDifferenceFormatter","priceFormatter","differenceSort2","differenceFormatter2","percentDifferenceSort2","percentDifferenceFormatter2","priceFormatter2","differenceFormatterCSV","percentFormatterCSV","differenceFormatterCSVWatchlist","percentFormatterCSVWatchlist","compareNumbers","result","localeCompare","numeric","sensitivity","LOCAL_STORAGE_ID","compare","Prices","useState","prices","setPrices","groups","setGroups","value","setValue","user","setUser","lastUpdated","setLastUpdated","setShow","selectedProduct","setSelectedProduct","openProductModal","getAllPricesFromSet","console","log","priceService","then","useEffect","loggedUserJSON","window","localStorage","getItem","JSON","parse","listService","groupService","sort","metaService","addToCollection","id","addToWatchlist","columns","text","formatter","sortFunc","TableUtils","isDummyField","hidden","_id","align","username","onChange","event","groupId","target","key","map","bootstrap4","keyField","FAQ","getUser","registerUser","password","newUser","post","deleteUser","delete","RegisterForm","setUsername","setPassword","confirmPassword","setConfirmPassword","validationMessage","setValidationMessage","registered","setRegistered","handleRegistration","preventDefault","length","userService","class","onSubmit","type","Watchlist","watchlist","setWatchlist","deleteProduct","location","reload","csvFormatter","csvExport","ExportCSVButton","props","onExport","exportCSV","baseProps","csvProps","Collection","ownedProducts","setOwnedProducts","updatedData","clear","login","credentials","GXNavbar","history","useHistory","handleLogout","Auth","push","handleLogin","loginService","setItem","stringify","loggedInUser","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","as","to","loginString","logoutForm","loginFailedModal","placeholder","LegalNavbar","sticky","Text","UserPage","deletionModal","Privacy","App","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6448ca65.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/products'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl)\r\n}\r\n\r\nconst getAllFromSet = (setId) => {\r\n  return axios.get(baseUrl + '/group/' + setId)\r\n}\r\n\r\nconst getAllPricesFromUser = (userId) => {\r\n  return axios.get('/users/' + userId)\r\n}\r\nexport default {\r\n  getAll,\r\n  getAllFromSet,\r\n  getAllPricesFromUser\r\n}\r\n","import axios from 'axios'\r\nconst baseUrl = '/groups'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl)\r\n}\r\n\r\nexport default {\r\n  getAll\r\n}\r\n","import axios from 'axios'\r\nconst baseUrl = '/lists'\r\n\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n    token = `bearer ${newToken}`\r\n}\r\n\r\nconst pushToWatchlist = async(userId, productId) => {\r\n    const config = {\r\n        headers: {Authorization: token}\r\n    }\r\n\r\n    const response = await axios.put(baseUrl + '/' + userId + '/watchlist/' + productId, null, config)\r\n    return response.data\r\n}\r\n\r\nconst pushToCollection = async(userId, productId) => {\r\n    const config = {\r\n        headers: {Authorization: token}\r\n    }\r\n\r\n    const response = await axios.put(baseUrl + '/' + userId + '/collection/' + productId, null, config)\r\n    return response\r\n}\r\n\r\nconst deleteFromWatchlist = async(userId, productId) => {\r\n    const config = {\r\n       headers: {Authorization: token}\r\n    }\r\n    \r\n    const response = await axios.put(baseUrl + '/' + userId + '/watchlist/delete/' + productId, productId, config)\r\n    return response\r\n}\r\n\r\nconst deleteFromCollection = async (userId, productId) => {\r\n    const config = {\r\n       headers: {Authorization: token}\r\n    }\r\n\r\n    const response = await axios.put(baseUrl + '/' + userId + '/collection/delete/' + productId, productId, config)\r\n    return response\r\n}\r\n\r\nconst increment = async (userId, productId) => {\r\n    const config = {\r\n       headers: {Authorization: token}\r\n    }\r\n \r\n    const response = await axios.put(baseUrl + '/' + userId + '/collection/increment/' + productId, productId, config)\r\n    return response.data\r\n}\r\n\r\n\r\nconst decrement = async (userId, productId) => {\r\n    const config = {\r\n       headers: {Authorization: token}\r\n    }\r\n    \r\n    const response = await axios.put(baseUrl + '/' + userId + '/collection/decrement/' + productId, productId, config)\r\n    return response.data\r\n}\r\n\r\n\r\nexport default {\r\n    setToken,\r\n    pushToWatchlist,\r\n    pushToCollection,\r\n    deleteFromWatchlist,\r\n    deleteFromCollection,\r\n    increment,\r\n    decrement\r\n}","import axios from 'axios'\r\nconst baseUrl = '/meta'\r\n\r\nconst getLastUpdated = () => {\r\n  return axios.get(baseUrl)\r\n}\r\n\r\nexport default {\r\n  getLastUpdated\r\n}\r\n","export const formatDate = (date) => {\r\n    const options = { year: 'numeric', month: 'numeric', day: 'numeric' }\r\n    return date.toLocaleDateString(undefined, options)\r\n}","import React from 'react'\r\nimport {Button, Modal} from 'react-bootstrap'\r\nimport * as DateUtils from '../utils/date'\r\n\r\nconst ProductModal = ({show, product, handleClose}) => {  \r\n  \r\n    if(!product) {\r\n      return null\r\n    }\r\n    \r\n    return (\r\n      <>  \r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Card Information</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n          <div>\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td rowSpan=\"3\">\r\n                  <div className=\"product-image\">\r\n                    <img src={product.imageUrl} alt={product.name} />\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <div className=\"product-name\">\r\n                    {product.name}\r\n                  </div>\r\n                  <div className=\"product-info\">\r\n                    {product.group ? product.group.groupName : 'Set Name Not Found'}\r\n                  </div>\r\n                  <div className=\"product-info\">\r\n                    {product.cardNumber}\r\n                  </div>\r\n                  <div className=\"product-info\">\r\n                    {product.cardRarity}\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <div className=\"product-info\">\r\n                    Market Price: {product.currentMarketPrice}\r\n                  </div>\r\n                  <div className=\"product-info\">\r\n                    Last Updated: {product.currentDate ? DateUtils.formatDate(new Date(product.currentDate)) : \"Unknown\"}\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <a href={product.storeUrl}>TCGPlayer prices</a>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    )\r\n  }\r\n\r\nexport default ProductModal  ","import React from 'react'\r\n\r\nexport const differenceSort = (a, b, order, dataField, rowA, rowB) => {\r\n    let differenceA = rowA.product.currentMarketPrice - rowA.product.previousMarketPrice\r\n    let differenceB = rowB.product.currentMarketPrice - rowB.product.previousMarketPrice\r\n\r\n    if (order === 'asc') {\r\n        return differenceB - differenceA\r\n    }\r\n\r\n    return differenceA - differenceB; // desc\r\n}\r\n\r\nexport const differenceFormatter = (cell, row) => {\r\n    let difference = (row.product.currentMarketPrice - row.product.previousMarketPrice).toFixed(2)\r\n    let color = 'black'\r\n    if (difference < 0) {\r\n        color = 'red'\r\n    }\r\n    else if (difference > 0) {\r\n        color = 'green'\r\n        difference = '+' + difference\r\n    }\r\n\r\n    return (\r\n        <font color={color}>\r\n            {difference}\r\n        </font>\r\n    )\r\n}\r\n\r\nexport const percentDifferenceSort = (a, b, order, dataField, rowA, rowB) => {\r\n    let differenceA = (rowA.product.currentMarketPrice - rowA.product.previousMarketPrice) / rowA.product.previousMarketPrice\r\n    let differenceB = (rowB.product.currentMarketPrice - rowB.product.previousMarketPrice) / rowB.product.previousMarketPrice\r\n\r\n    if (order === 'asc') {\r\n        return differenceB - differenceA\r\n    }\r\n\r\n    return differenceA - differenceB; // desc\r\n}\r\n\r\nexport const percentDifferenceFormatter = (cell, row) => {\r\n    let difference = (100 * (row.product.currentMarketPrice - row.product.previousMarketPrice) / row.product.previousMarketPrice).toFixed(2)\r\n    let color = 'black'\r\n    if (difference < 0) {\r\n        color = 'red'\r\n    }\r\n    else if (difference > 0) {\r\n        color = 'green'\r\n        difference = '+' + difference\r\n    }\r\n\r\n    difference = difference + '%'\r\n\r\n    return (\r\n        <font color={color}>\r\n            {difference}\r\n        </font>\r\n    )\r\n}\r\n\r\nexport const priceFormatter = (cell, row) => {\r\n    return row.product.currentMarketPrice ? row.product.currentMarketPrice.toFixed(2) : \"No price\"\r\n}\r\n\r\n/****************************************************/\r\n//Spares to deal with the product-by-itself data in prices\r\n//May be a better solution but this well work for now\r\n\r\nexport const differenceSort2 = (a, b, order, dataField, rowA, rowB) => {\r\n    let differenceA = rowA.currentMarketPrice - rowA.previousMarketPrice\r\n    let differenceB = rowB.currentMarketPrice - rowB.previousMarketPrice\r\n\r\n    if (order === 'asc') {\r\n        return differenceB - differenceA\r\n    }\r\n\r\n    return differenceA - differenceB; // desc\r\n}\r\n\r\nexport const differenceFormatter2 = (cell, row) => {\r\n    let difference = (row.currentMarketPrice - row.previousMarketPrice).toFixed(2)\r\n    let color = 'black'\r\n    if (difference < 0) {\r\n        color = 'red'\r\n    }\r\n    else if (difference > 0) {\r\n        color = 'green'\r\n        difference = '+' + difference\r\n    }\r\n\r\n    return (\r\n        <font color={color}>\r\n            {difference}\r\n        </font>\r\n    )\r\n}\r\n\r\nexport const percentDifferenceSort2 = (a, b, order, dataField, rowA, rowB) => {\r\n    let differenceA = (rowA.currentMarketPrice - rowA.previousMarketPrice) / rowA.previousMarketPrice\r\n    let differenceB = (rowB.currentMarketPrice - rowB.previousMarketPrice) / rowB.previousMarketPrice\r\n\r\n    if (order === 'asc') {\r\n        return differenceB - differenceA\r\n    }\r\n\r\n    return differenceA - differenceB; // desc\r\n}\r\n\r\nexport const percentDifferenceFormatter2 = (cell, row) => {\r\n    let difference = (100 * (row.currentMarketPrice - row.previousMarketPrice) / row.previousMarketPrice).toFixed(2)\r\n    let color = 'black'\r\n    if (difference < 0) {\r\n        color = 'red'\r\n    }\r\n    else if (difference > 0) {\r\n        color = 'green'\r\n        difference = '+' + difference\r\n    }\r\n\r\n    difference = difference + '%'\r\n\r\n    return (\r\n        <font color={color}>\r\n            {difference}\r\n        </font>\r\n    )\r\n}\r\n\r\nexport const priceFormatter2 = (cell, row) => {\r\n    return row.currentMarketPrice ? row.currentMarketPrice.toFixed(2) : \"No price\"\r\n}\r\n\r\n/******************************/\r\n\r\n//CSV Formatting (no JSX)\r\nexport const differenceFormatterCSV = (cell, row) => {\r\n    return (row.product.currentMarketPrice - row.product.previousMarketPrice).toFixed(2)\r\n}\r\n\r\nexport const percentFormatterCSV = (cell, row) => {\r\n    return (100 * (row.product.currentMarketPrice - row.product.previousMarketPrice)/(row.product.previousMarketPrice)).toFixed(2) + \"%\"\r\n}\r\n\r\n//Need separate ones to handle the watchlist data\r\nexport const differenceFormatterCSVWatchlist = (cell, row) => {\r\n    return (row.currentMarketPrice - row.previousMarketPrice).toFixed(2)\r\n}\r\n\r\nexport const percentFormatterCSVWatchlist = (cell, row) => {\r\n    return (100 * (row.currentMarketPrice - row.previousMarketPrice)/(row.previousMarketPrice)).toFixed(2) + \"%\"\r\n}\r\n\r\n//All-purpose method that can compare string and integer numbers\r\n//Used to ensure that '10' comes before '2' for example, which doesn't happen with lexicographical comaprison\r\n//Also handles strings that simply contain numbers (e.g. 1/202)\r\nexport const compareNumbers = (a, b, order, dataField, rowA, rowB) => {\r\n    \r\n    let result = 0\r\n\r\n    if(typeof a === 'string' && typeof b === 'string') {\r\n        result = a.localeCompare(b, undefined, {numeric: true, sensitivity: 'base'})\r\n    }\r\n    else {\r\n        if (a > b) {\r\n            result = 1\r\n        }\r\n        else if(a < b) {\r\n            result = -1\r\n        }\r\n        else {\r\n            result = 0\r\n        }\r\n    }\r\n\r\n    if(order === 'desc') {\r\n        result = result * -1\r\n    }\r\n    return result\r\n}","export const LOCAL_STORAGE_ID = 'LoggedInGxPricesUser'","import React, { useState, useEffect } from 'react'\r\nimport priceService from '../services/priceService'\r\nimport groupService from '../services/groupService'\r\nimport listService from '../services/listService'\r\nimport metaService from '../services/metaService'\r\nimport ProductModal from './ProductModal'\r\nimport * as TableUtils from '../utils/table'\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\nimport { AiFillEye } from 'react-icons/ai'\r\nimport { GiChest } from 'react-icons/gi'\r\nimport { LOCAL_STORAGE_ID } from '../utils/constants'\r\nimport * as DateUtils from '../utils/date'\r\n\r\nconst compare = (a, b) => {\r\n  if (a.groupName < b.groupName) {\r\n    return -1;\r\n  }\r\n  if (a.groupName > b.groupName) {\r\n    return 1;\r\n  }\r\n  // a must be equal to b\r\n  return 0;\r\n}\r\n\r\nconst Prices = () => {\r\n  const [prices, setPrices] = useState([])\r\n  const [groups, setGroups] = useState([])\r\n  const [value, setValue] = useState(2594)\r\n  const [user, setUser] = useState(null)\r\n  const [lastUpdated, setLastUpdated] = useState(null)\r\n  const [show, setShow] = useState(false)\r\n  const [selectedProduct, setSelectedProduct] = useState(null)\r\n\r\n  const nameFormatter = (cell, row) => {\r\n    return (\r\n        <button onClick={() => openProductModal(row)}>{row.name}</button>\r\n    )\r\n  }\r\n\r\n  const openProductModal = (product) => {\r\n    setSelectedProduct(product)\r\n    setShow(true)\r\n  }\r\n\r\n  const getAllGroups = () => {\r\n    groupService\r\n      .getAll()\r\n      .then(response => {\r\n        setGroups(response.data.sort(compare))\r\n      })\r\n  }\r\n\r\n  const getAllPricesFromSet = (setId) => {\r\n    //eslint-disable-next-line\r\n    if (setId == 0) {\r\n      console.log(\"getting all\")\r\n      priceService\r\n        .getAll()\r\n        .then(response => {\r\n          setPrices(response.data)\r\n        })\r\n    }\r\n    else {\r\n      priceService\r\n        .getAllFromSet(setId)\r\n        .then(response => {\r\n          setPrices(response.data)\r\n        })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem(LOCAL_STORAGE_ID)\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      listService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    getAllPricesFromSet(2594)\r\n    getAllGroups()\r\n    metaService.getLastUpdated().then(response => {\r\n      const lastUpdated = new Date(response.data.lastUpdated)\r\n      setLastUpdated(DateUtils.formatDate(lastUpdated))\r\n    })\r\n  }, [])\r\n\r\n  const changeGroup = (groupId) => {\r\n    getAllPricesFromSet(groupId)\r\n    setValue(groupId)\r\n  }\r\n\r\n  //let totalMarketValue = 0\r\n  //for (let k = 0; k < prices.length; k++) {\r\n  //  totalMarketValue += prices[k].currentMarketPrice\r\n // }\r\n\r\n  const addToCollection = async (productId) => {\r\n    await listService.pushToCollection(user.id, productId)\r\n  }\r\n\r\n  const addToWatchlist = async (productId) => {\r\n    await listService.pushToWatchlist(user.id, productId)\r\n  }\r\n\r\n  const buttonFormatter = (cell, row) => {\r\n    return (\r\n        <div>               \r\n            <button onClick={() => addToWatchlist(row._id)}>\r\n               <AiFillEye/>\r\n            </button>\r\n            <button onClick={() => addToCollection(row._id)}>\r\n               <GiChest/>\r\n            </button>\r\n        </div>\r\n    )\r\n  }\r\n\r\n  const columns = [{\r\n    dataField: 'name',\r\n    text: 'Name',\r\n    sort: true,\r\n    formatter: nameFormatter\r\n  }, {\r\n    dataField: 'group.groupName',\r\n    text: 'Set',\r\n    sort: true\r\n  }, {\r\n    dataField: 'cardNumber',\r\n    text: 'Number',\r\n    sort: true,\r\n    sortFunc: TableUtils.compareNumbers\r\n  }, {\r\n    dataField: 'cardRarity',\r\n    text: 'Rarity',\r\n    sort: true\r\n  }, {\r\n    dataField: 'currentMarketPrice',\r\n    text: 'Unit Price',\r\n    sort: true,\r\n    formatter: TableUtils.priceFormatter2\r\n  }, {\r\n    dataField: 'difference',\r\n    text: 'Change',\r\n    isDummyField: true,\r\n    sort: true,\r\n    sortFunc: TableUtils.differenceSort2,\r\n    formatter: TableUtils.differenceFormatter2\r\n  }, {\r\n    dataField: 'percentDifference',\r\n    text: 'Change (%)',\r\n    isDummyField: true,\r\n    sort: true,\r\n    sortFunc: TableUtils.percentDifferenceSort2,\r\n    formatter: TableUtils.percentDifferenceFormatter2\r\n  }, {\r\n    dataField: 'button',\r\n    isDummyField: true,\r\n    hidden: !user,\r\n    formatter: buttonFormatter\r\n  }]\r\n\r\n\r\n  return (\r\n    <div align=\"center\">\r\n      <h1>Current Market Prices</h1>\r\n      <div>\r\n        {user ? \"Logged in as: \" + user.username : null}<br/>\r\n          Last updated: {lastUpdated}\r\n      </div>\r\n      <select id=\"set-selector\" name=\"sets\" value={value} onChange={(event) => changeGroup(event.target.value)}>\r\n        <option value={0} key={0}>\r\n          All cards (slow!)\r\n          </option>\r\n        {groups.map(group =>\r\n          <option value={group.groupId} key={group.groupId}>\r\n            {group.groupName}\r\n          </option>\r\n        )}\r\n      </select>\r\n      <ProductModal product={selectedProduct} show={show} handleClose={() => setShow(false)} />\r\n      <BootstrapTable bootstrap4={true} keyField='_id' data={prices} columns={columns} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Prices","import React from 'react'\r\n\r\nconst FAQ = () => {\r\n    return (\r\n        <div className=\"w-100 p-3\">\r\n            <h1>FAQ</h1>\r\n            <br/>\r\n            <h3>What does this site have?</h3>\r\n            <p>\r\n                This site collates the TCGPlayer market price data for English Pokémon cards to allow for easier visibility of multiple prices at once. It also allows for users to see the general market value of their collection, or of cards that they are looking to buy in the future, and view the short-term changes of price data.\r\n                <br/><br/>\r\n                Market price data is updated regularly, the price/percentage difference since the last update is also shown.\r\n                <br/><br/>\r\n                You must register a free account to use the collection/watchlist features. \r\n            </p>\r\n            <h3>What does this site not have?</h3>\r\n            <p>\r\n                This site does not contain data for\r\n                <ul>\r\n                    <li>graded cards</li>\r\n                    <li>Japanese cards</li>\r\n                    <li>sealed products</li>\r\n                    <li>any non-Pokémon products</li>\r\n                </ul>                \r\n                Also, due to technical reasons it does not differentiate between reverse-holo and normal prices.\r\n            </p>\r\n            <h3>What are market prices?</h3>\r\n            <p>\r\n                Market prices are calculated by TCGPlayer based on the sales that take place through their platform. They serve as a good indicator as to what the card itself is worth.\r\n                <br/><br/>\r\n                Market prices do not seem to take condition into account. Generally, even more expensive modern cards will be much more available as near-mint copies, so the market price will hover around there. But for older cards, the near-mint copies will be rarer and more people will settle for lightly played or similar, having to pay extra for near mint. So if you only want near-mint cards, market prices are more accurate for modern cards than they are for older cards.\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FAQ","import axios from 'axios'\r\nconst baseUrl = '/users'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n    token = `bearer ${newToken}`\r\n}\r\n\r\nconst getUser = (userId) => {\r\n  return axios.get(baseUrl + '/' + userId)\r\n}\r\n\r\nconst registerUser = async (username, password) => {\r\n  const newUser = {\r\n    username: username,\r\n    password: password\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newUser)\r\n  console.log(response)\r\n}\r\n\r\nconst deleteUser = async (userId) => {\r\n  //Delete user requires authorization token\r\n  const config = {\r\n    headers: {Authorization: token}\r\n  }\r\n\r\n  const response = await axios.delete(baseUrl + '/' + userId, config)\r\n  console.log(response)\r\n}\r\n\r\nexport default {\r\n  getUser,\r\n  registerUser,\r\n  deleteUser,\r\n  setToken\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport listService from '../services/listService'\r\nimport userService from '../services/userService'\r\nimport { LOCAL_STORAGE_ID } from '../utils/constants'\r\n//import { Button, Col, Form, InputGroup } from 'react-bootstrap'\r\n\r\nconst RegisterForm = () => {\r\n  const [username, setUsername] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n  const [validationMessage, setValidationMessage] = useState(\"\")\r\n  const [registered, setRegistered] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem(LOCAL_STORAGE_ID)\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      listService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n  \r\n  const handleRegistration = async (event) => {\r\n    event.preventDefault()\r\n\r\n    if(!username || username.length === 0) {\r\n      setValidationMessage(\"Username required!\")\r\n      return\r\n    }\r\n    if(!password || password.length === 0) {\r\n      setValidationMessage(\"Password required!\")\r\n      return\r\n    }\r\n    if(!(password === confirmPassword)) {\r\n      setValidationMessage(\"Password and confirm password are different!\")\r\n      return\r\n    }\r\n\r\n    try {\r\n      await userService.registerUser(username, password)\r\n      setRegistered(true)\r\n      //Tell user to log in\r\n    } catch (exception) {\r\n      //Force unique usernames\r\n      //Could be improved I'm sure\r\n      setValidationMessage(\"Username already in use!\")\r\n    }\r\n  }\r\n\r\n  const loginForm = () => {\r\n    return (\r\n      <div align=\"center\" className=\"w-100 p-3\">\r\n        <h2>New user? Register here:</h2>\r\n        <form class=\"form\" onSubmit={handleRegistration}>\r\n          <p class=\"form\">\r\n            <label class=\"form\">\r\n              Username  \r\n            </label>\r\n            <input class=\"form\" type=\"text\" value={username} onChange={({ target }) => setUsername(target.value)} />\r\n          </p>\r\n          <p class=\"form\">\r\n            <label class=\"form\">\r\n              Password  \r\n            </label>\r\n            <input class=\"form\" type=\"password\" value={password} onChange={({ target }) => setPassword(target.value)} />\r\n          </p>\r\n          <p class=\"form\">\r\n            <label class=\"form\">\r\n              Confirm Password\r\n            </label>\r\n            <input class=\"form\" type=\"password\" value={confirmPassword} onChange={({ target }) => setConfirmPassword(target.value)} />\r\n          </p>\r\n          <p class=\"form\">{validationMessage}</p>\r\n          <button align=\"center\" type=\"submit\">Register</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {registered ? <div>Success! Log in with your new credentials.</div> : loginForm()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RegisterForm","import React, {useState, useEffect} from 'react'\r\nimport listService from '../services/listService'\r\nimport userService from '../services/userService'\r\nimport {LOCAL_STORAGE_ID} from '../utils/constants'\r\nimport { MdDeleteForever } from 'react-icons/md'\r\nimport ProductModal from './ProductModal'\r\nimport * as TableUtils from '../utils/table'\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\r\n\r\nconst Watchlist = () => {\r\n    const [user, setUser] = useState(null)\r\n    const [watchlist, setWatchlist] = useState([])\r\n    const [show, setShow] = useState(false)\r\n    const [selectedProduct, setSelectedProduct] = useState(null)\r\n\r\n    const nameFormatter = (cell, row) => {\r\n        return (\r\n            <button onClick={() => openProductModal(row)}>{row.name}</button>\r\n        )\r\n    }\r\n\r\n    const openProductModal = (product) => {\r\n        setSelectedProduct(product)\r\n        setShow(true)\r\n    }\r\n\r\n    const getWatchlist = (userId) => {\r\n        userService\r\n            .getUser(userId)\r\n            .then(response => {\r\n                setWatchlist(response.data.watchlist)\r\n            })\r\n      }\r\n\r\n    const deleteProduct = async (productId) => {\r\n        await listService.deleteFromWatchlist(user.id, productId)\r\n        window.location.reload()\r\n    }\r\n\r\n    const buttonFormatter = (cell, row) => {\r\n        return (\r\n            <div>               \r\n                <button onClick={() => deleteProduct(row._id)}>\r\n                    <MdDeleteForever />\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const columns = [{\r\n        dataField: 'name',\r\n        text: 'Name',\r\n        sort: true,\r\n        formatter: nameFormatter\r\n    }, {\r\n        dataField: 'group.groupName',\r\n        text: 'Set',\r\n        sort: true\r\n    }, {\r\n        dataField: 'cardNumber',\r\n        text: 'Number',\r\n        sort: true,\r\n        sortFunc: TableUtils.compareNumbers\r\n    }, {\r\n        dataField: 'cardRarity',\r\n        text: 'Rarity',\r\n        sort: true\r\n    }, {\r\n        dataField: 'currentMarketPrice',\r\n        text: 'Unit Price',\r\n        sort: true,\r\n        formatter: TableUtils.priceFormatter2\r\n    }, {\r\n        dataField: 'difference',\r\n        text: 'Change',\r\n        isDummyField: true,\r\n        sort: true,\r\n        sortFunc: TableUtils.differenceSort2,\r\n        formatter: TableUtils.differenceFormatter2,\r\n        csvFormatter: TableUtils.differenceFormatterCSVWatchlist\r\n    }, {\r\n        dataField: 'percentDifference',\r\n        text: 'Change (%)',\r\n        isDummyField: true,\r\n        sort: true,\r\n        sortFunc: TableUtils.percentDifferenceSort2,\r\n        formatter: TableUtils.percentDifferenceFormatter2,\r\n        csvFormatter: TableUtils.percentFormatterCSVWatchlist\r\n    }, {\r\n        dataField: 'button',\r\n        isDummyField: true,\r\n        formatter: buttonFormatter,\r\n        csvExport: false\r\n    }]\r\n\r\n    useEffect(() => {\r\n        const loggedUserJSON = window.localStorage.getItem(LOCAL_STORAGE_ID)\r\n        if(loggedUserJSON) {\r\n            const user = JSON.parse(loggedUserJSON)\r\n            setUser(user)\r\n            getWatchlist(user.id)\r\n            listService.setToken(user.token)\r\n        }\r\n    }, [])\r\n\r\n    const ExportCSVButton = (props) => {\r\n        const handleClick = () => {\r\n            props.onExport()\r\n        }\r\n\r\n        return (\r\n            <button className=\"btn btn-success\" onClick={ handleClick }>Export to CSV</button>\r\n        )\r\n    }\r\n\r\n    const watchlistTable = () => {\r\n        return (\r\n            <div>\r\n                <ProductModal product={selectedProduct} show={show} handleClose={() => setShow(false)} />\r\n                <ToolkitProvider bootstrap4={true} keyField=\"id\" data={ watchlist } columns={ columns } exportCSV>\r\n                    {\r\n                      props => (\r\n                       <div>                         \r\n                         <BootstrapTable { ...props.baseProps } />\r\n                         <ExportCSVButton { ...props.csvProps }>Export to CSV</ExportCSVButton>\r\n                         <hr/>\r\n                      </div>\r\n                     )\r\n                    }\r\n                </ToolkitProvider>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div align=\"center\">\r\n            <h1>Watchlist</h1>\r\n            {user ? watchlistTable() :\r\n                <div>\r\n                    Log in first to see your watchlist!\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Watchlist","import React, { useState, useEffect } from 'react'\r\nimport listService from '../services/listService'\r\nimport userService from '../services/userService'\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\r\n\r\nimport { LOCAL_STORAGE_ID } from '../utils/constants'\r\nimport { BiPlus, BiMinus } from 'react-icons/bi'\r\nimport { MdDeleteForever } from 'react-icons/md'\r\nimport ProductModal from './ProductModal'\r\nimport * as TableUtils from '../utils/table'\r\n\r\nconst Collection = () => {\r\n    const [user, setUser] = useState(null)\r\n    const [ownedProducts, setOwnedProducts] = useState([])\r\n    const [selectedProduct, setSelectedProduct] = useState(null)\r\n    const [show, setShow] = useState(false)\r\n\r\n    const nameFormatter = (cell, row) => {\r\n        return (\r\n            <button onClick={() => openProductModal(row.product)}>{row.product.name}</button>\r\n        )\r\n    }\r\n\r\n    const openProductModal = (product) => {\r\n        setSelectedProduct(product)\r\n        setShow(true)\r\n    }\r\n\r\n    const deleteProduct = async (productId) => {\r\n        await listService.deleteFromCollection(user.id, productId)\r\n        window.location.reload()\r\n    }\r\n\r\n    const increment = async (productId) => {\r\n        const updatedData = await listService.increment(user.id, productId)\r\n        setOwnedProducts(updatedData.ownedProducts)\r\n    }\r\n\r\n    const decrement = async (productId) => {\r\n        const updatedData = await listService.decrement(user.id, productId)\r\n        setOwnedProducts(updatedData.ownedProducts)\r\n    }\r\n\r\n    const buttonFormatter = (cell, row) => {\r\n        return (\r\n            <div>\r\n                <button onClick={() => increment(row.product._id)}>\r\n                    <BiPlus />\r\n                </button>\r\n                <button onClick={() => decrement(row.product._id)}>\r\n                    <BiMinus />\r\n                </button>\r\n                <button onClick={() => deleteProduct(row.product._id)}>\r\n                    <MdDeleteForever />\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const columns = [{\r\n        dataField: 'product.name',\r\n        text: 'Name',\r\n        sort: true,\r\n        formatter: nameFormatter\r\n    }, {\r\n        dataField: 'product.group.groupName',\r\n        text: 'Set',\r\n        sort: true\r\n    }, {\r\n        dataField: 'product.cardNumber',\r\n        text: 'Number',\r\n        sort: true,\r\n        sortFunc: TableUtils.compareNumbers\r\n    }, {\r\n        dataField: 'product.cardRarity',\r\n        text: 'Rarity',\r\n        sort: true\r\n    }, {\r\n        dataField: 'product.currentMarketPrice',\r\n        text: 'Unit Price',\r\n        sort: true,\r\n        formatter: TableUtils.priceFormatter\r\n    }, {\r\n        dataField: 'difference',\r\n        text: 'Change',\r\n        isDummyField: true,\r\n        sort: true,\r\n        sortFunc: TableUtils.differenceSort,\r\n        formatter: TableUtils.differenceFormatter,\r\n        csvFormatter: TableUtils.differenceFormatterCSV\r\n    }, {\r\n        dataField: 'percentDifference',\r\n        text: 'Change (%)',\r\n        isDummyField: true,\r\n        sort: true,\r\n        sortFunc: TableUtils.percentDifferenceSort,\r\n        formatter: TableUtils.percentDifferenceFormatter,\r\n        csvFormatter: TableUtils.percentFormatterCSV\r\n    }, {\r\n        dataField: 'quantity',\r\n        text: 'Quantity',\r\n        sort: true,\r\n    }, {\r\n        dataField: 'button',\r\n        isDummyField: true,\r\n        formatter: buttonFormatter,\r\n        csvExport: false\r\n    }]\r\n\r\n    const getOwnedProducts = (userId) => {\r\n        userService\r\n            .getUser(userId)\r\n            .then(response => {\r\n                setOwnedProducts(response.data.ownedProducts)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const loggedUserJSON = window.localStorage.getItem(LOCAL_STORAGE_ID)\r\n        if (loggedUserJSON) {\r\n            const user = JSON.parse(loggedUserJSON)\r\n            setUser(user)\r\n            getOwnedProducts(user.id)\r\n            listService.setToken(user.token)\r\n        }\r\n    }, [])\r\n\r\n    const ExportCSVButton = (props) => {\r\n        const handleClick = () => {\r\n            props.onExport()\r\n        }\r\n\r\n        return (\r\n            <button className=\"btn btn-success\" onClick={ handleClick }>Export to CSV</button>\r\n        )\r\n    }\r\n\r\n\r\n    const collectionTable = () => {\r\n     \r\n        return (\r\n            <div>\r\n                <ProductModal product={selectedProduct} show={show} handleClose={() => setShow(false)} />\r\n                <ToolkitProvider bootstrap4={true} keyField=\"id\" data={ ownedProducts } columns={ columns } exportCSV>\r\n                    {\r\n                      props => (\r\n                       <div>                         \r\n                         <BootstrapTable { ...props.baseProps } />\r\n                         <ExportCSVButton { ...props.csvProps }>Export to CSV</ExportCSVButton>\r\n                         <hr/>\r\n                      </div>\r\n                     )\r\n                    }\r\n                </ToolkitProvider>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div align=\"center\">\r\n            <h1>Collection</h1>\r\n            {user ? collectionTable() :\r\n                <div>\r\n                    Log in first to see your collection!\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Collection","import { LOCAL_STORAGE_ID } from './constants'\r\n\r\nconst getLoggedInUser = () => {\r\n    const loggedUserJSON = window.localStorage.getItem(LOCAL_STORAGE_ID)\r\n    if(loggedUserJSON) {\r\n       const user = JSON.parse(loggedUserJSON)\r\n       return user       \r\n    } else {\r\n       return null\r\n    }\r\n}\r\n\r\nconst logout = () => {\r\n    window.localStorage.clear()\r\n}\r\n   \r\n\r\nexport default {\r\n    getLoggedInUser,\r\n    logout\r\n}","import axios from 'axios'\r\nconst baseUrl = '/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Button, Modal, Nav, Navbar } from 'react-bootstrap'\r\n\r\nimport Auth from '../utils/auth'\r\nimport listService from '../services/listService'\r\nimport loginService from '../services/loginService'\r\nimport { LOCAL_STORAGE_ID } from '../utils/constants'\r\n\r\nconst GXNavbar = () => {\r\n  //eslint-disable-next-line\r\n  const [user, setUser] = useState(null)\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [show, setShow] = useState(false)\r\n\r\n  let history = useHistory()\r\n\r\n  const handleLogout = async (event) => {\r\n    event.preventDefault()\r\n    Auth.logout()\r\n    setUser(null)\r\n    history.push('/')\r\n    window.location.reload()\r\n    \r\n  }\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const user = await loginService.login({\r\n        username, password,\r\n      })\r\n\r\n      window.localStorage.setItem(\r\n        LOCAL_STORAGE_ID, JSON.stringify(user)\r\n      )\r\n\r\n      listService.setToken(user.token)\r\n      setUser(user)\r\n      setUsername('')\r\n      setPassword('')\r\n      history.push('/')\r\n      window.location.reload()\r\n    } catch (exception) {\r\n      setShow(true)\r\n    }\r\n  }\r\n\r\n  let loggedInUser = Auth.getLoggedInUser()\r\n\r\n  const loginFailedModal = () => {\r\n    const handleClose = () => setShow(false)\r\n\r\n    return (\r\n      <>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Error</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div>\r\n              Invalid credentials!\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const loginForm = () => {\r\n    return (\r\n      <form onSubmit={handleLogin}>\r\n        {loginFailedModal()}\r\n        <input id=\"username\" type=\"text\" value={username} placeholder=\"Username\" name=\"Username\" onChange={({ target }) => setUsername(target.value)} />\r\n          &nbsp;\r\n        <input id=\"password\" type=\"password\" value={password} placeholder=\"Password\" name=\"Password\" onChange={({ target }) => setPassword(target.value)} />\r\n          &nbsp;\r\n        <button type=\"submit\">Log In</button>\r\n      </form>\r\n    )\r\n  }\r\n\r\n\r\n  const logoutForm = () => {\r\n    let loginString = ''\r\n    if (loggedInUser) {\r\n      loginString = 'Logged in as ' + loggedInUser.username + ' '\r\n    }\r\n\r\n    return (\r\n      <form onSubmit={handleLogout}>\r\n        {loginString}\r\n        <button type=\"submit\">Logout</button>\r\n      </form>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n      <Navbar.Brand href=\"#home\">GXPrices</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link as={Link} to=\"/\">Prices</Nav.Link>\r\n          <Nav.Link as={Link} to=\"/watchlist\">Watchlist</Nav.Link>\r\n          <Nav.Link as={Link} to=\"/collection\">Collection</Nav.Link>\r\n          {loggedInUser ? null : <Nav.Link as={Link} to=\"/register\">Register</Nav.Link>}\r\n          {loggedInUser ? <Nav.Link as={Link} to=\"/userpage\">Account</Nav.Link> : null}\r\n          <Nav.Link as={Link} to=\"/faq\">FAQ</Nav.Link>\r\n        </Nav>\r\n        <Nav>\r\n          {loggedInUser ? logoutForm() : loginForm()}\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n\r\n}\r\n\r\nexport default GXNavbar","import React from 'react'\r\nimport {Nav, Navbar} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nconst LegalNavbar = () => {\r\n    return (\r\n        <Navbar sticky=\"bottom\" bg=\"light\" expand=\"lg\">\r\n          <Navbar.Text>\r\n             © 2020 GXPrices. Pokémon is © Nintendo 1996-2020.\r\n          </Navbar.Text>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Nav className=\"mr-auto align-right\">\r\n            \r\n          </Nav>     \r\n          <Nav>\r\n             <Nav.Link as={Link} to=\"/privacy\">Privacy Policy</Nav.Link>\r\n          </Nav>\r\n\r\n        </Navbar>\r\n    )\r\n    \r\n}\r\n\r\nexport default LegalNavbar","import React, {useState, useEffect} from 'react'\r\nimport {LOCAL_STORAGE_ID} from '../utils/constants'\r\nimport userService from '../services/userService'\r\nimport Auth from '../utils/auth'\r\nimport {Button, Modal} from 'react-bootstrap'\r\nconst UserPage = () => {\r\n    const [user, setUser] = useState(null)\r\n    const [show, setShow] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const loggedUserJSON = window.localStorage.getItem(LOCAL_STORAGE_ID)\r\n        if (loggedUserJSON) {\r\n            const user = JSON.parse(loggedUserJSON)\r\n            setUser(user)\r\n            userService.setToken(user.token)\r\n        }\r\n    }, [])\r\n\r\n    const handleLogout = () => {\r\n        console.log(\"reached\")\r\n        Auth.logout()\r\n        setUser(null)\r\n        window.location.reload()\r\n    }\r\n\r\n    const deletionModal = () => {\r\n        const handleClose = () => setShow(false)\r\n\r\n        return (\r\n            <>  \r\n              <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title>Confirm Deletion</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div>\r\n                        Are you sure you want to delete your account?\r\n                        This cannot be undone!\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <Button variant=\"primary\" onClick={() => deleteUser()}>\r\n                    Confirm\r\n                  </Button>\r\n                  <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Cancel  \r\n                  </Button>\r\n                </Modal.Footer>\r\n              </Modal>\r\n            </>\r\n          )\r\n    }\r\n    \r\n    const userPageHTML = () => {\r\n        return (\r\n            <div className=\"w-100 p-3\">\r\n                {deletionModal()}\r\n                <div>\r\n                    <h1>My Account</h1><br/>\r\n                    Logged in as {user.username}<br/>\r\n                    <button onClick={() => setShow(true)}>Delete Account</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const deleteUser = async () => {\r\n        if(user) {\r\n            await userService.deleteUser(user.id)\r\n        }\r\n        handleLogout()\r\n    }\r\n\r\n    return (\r\n        user ? userPageHTML() : <br/>\r\n    )\r\n\r\n}\r\n\r\nexport default UserPage","import React from 'react'\r\n\r\nconst Privacy = () => {\r\n    return (\r\n        <div className=\"w-100 p-3\">\r\n            <h1>Privacy Policy</h1><br/>\r\n            <p>\r\n                This site in itself does not store any data about you or your computer.\r\n            </p>\r\n            <p>\r\n                This site will store the items you add to your collection and watchlist in its database. This data is not sold or given out to any third parties.<br/>\r\n                You may delete your account at any time from your user page. If you delete your account this data will be automatically removed from the database.\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Privacy","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Prices from './components/Prices'\nimport FAQ from './components/FAQ'\nimport RegisterForm from './components/RegisterForm'\nimport Watchlist from './components/Watchlist'\nimport Collection from './components/Collection'\nimport GXNavbar from './components/GXNavbar'\nimport LegalNavbar from './components/LegalNavbar'\nimport UserPage from './components/UserPage'\nimport Privacy from './components/Privacy'\nimport './components/App.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport 'react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min.css';\nconst App = () => {\n  return (\n    <main>\n      <GXNavbar/>\n      <Switch>\n        <Route path=\"/\" component={Prices} exact />\n        <Route path=\"/faq\" component={FAQ} />\n        <Route path=\"/register\" component={RegisterForm} />\n        <Route path=\"/userpage\" component={UserPage}/>\n        <Route path=\"/watchlist\" component={Watchlist} />\n        <Route path=\"/collection\" component={Collection} />\n        <Route path=\"/privacy\" component={Privacy} />\n      </Switch>\n      <LegalNavbar/>\n    </main>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}